<?php

namespace Tests\Unit\Models;

use App\Models\CastMember;
use Tests\TestCase;
use Illuminate\Database\Eloquent\SoftDeletes;
use Illuminate\Foundation\Testing\WithFaker;
use Illuminate\Foundation\Testing\RefreshDatabase;

class CastMemberTestUnit extends TestCase
{
    private $castMember;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->castMember = new CastMember();
    }

    public function testFillable()
    {
        $fillable = ['name', 'type'];
        $this->assertEquals($fillable, $this->castMember->getFillable());
    }

    public function testTraits()
    {
        $trait = [
            SoftDeletes::class,
            \App\Models\Traits\Uuid::class
        ];

        $castMemberTraits = array_keys(class_uses(CastMember::class));
        $this->assertEquals($trait, $castMemberTraits);
    }

    public function testCastsAttribute()
    {
        $cats = [
            'id' => 'string',
            'type' => 'integer'
        ];

        $this->assertEquals($cats, $this->castMember->getCasts());
    }

    public function testDatesAttibuilte()
    {
        $fieldDate = [
            'created_at',
            'updated_at',
            'deleted_at'
        ];

        foreach ($fieldDate as $field){
            $this->assertContains($field, $this->castMember->getDates());
        }

        $this->assertCount(count($fieldDate), $this->castMember->getDates() );
    }

    public function testIncrementingAttribute()
    {
        $this->assertFalse($this->castMember->incrementing);
    }
}
